#!/usr/bin/env python
import os, sys, time, socket
cfc = 0
header = '\1\1\2\5'
fp_arr = []     #file pointer array
fn_arr = sys.argv[3:]   #file name array
fc_arr = []     #file contents array
BEDTIME = int(sys.argv[2])
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
for i in fn_arr: fp_arr.append(open(i, 'r+'))
if sys.argv[1] == '-l':
	s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
	s.bind(('', 5068))
	s.listen(5)
	c, caddr = s.accept()
	try:
		while True:
			cfc = 0
			for fp in fp_arr:
				msg = ''
				slen = int(c.recv(7 + len(header)).split(header)[-2])
				c.send('ack')
				if slen == 1:
					msg = c.recv(4096 + len(header)).split(header)[-2]
				else:
					msg = ''
					for i in range(0,slen - 1):
						msg = msg + c.recv(4096)
					msg = msg + c.recv(4096 + len(header)).split(header)[-2]
				c.send('ack')
				fp.truncate()
				if cfc > len(fc_arr) - 1: fc_arr.append(msg)
				else: fc_arr[cfc] = msg
				fp.write(msg)
				fp.seek(0,0)
				cfc = cfc + 1
			print '3'
			time.sleep(BEDTIME)
			try: c.send('ack')
			except socket.error:
				for fp in fp_arr:
					fp.close()
				c.close()
				s.close()
				exit()
			c.recv(3)
			cfc = 0
			for fp in fp_arr:
				fp = open(fn_arr[cfc], 'r+')
				msg = fp.read()
				mlen = len(msg)
				if mlen % 4096 == 0:
				        slen = mlen / 4096
				else:
				        slen = (mlen / 4096) + 1
				c.send(str(slen) + header)
				c.recv(3)
				if slen == 1:
				        c.send(msg + header)
				else:
				        for i in range(0,slen - 1):
				                c.send(msg[4096*i:4096*(i+1)])
				        c.send(msg[4096*(slen - 1):] + header)
				c.recv(3)
				fp.seek(0,0)
				cfc = cfc + 1
	except KeyboardInterrupt:
		c.send('die')
		for fp in fp_arr:
			fp.close()
		c.close()
		s.close()
		exit()
else:
	s.connect((socket.gethostbyname(sys.argv[1]), 5068))
	try:
		while True:
			cfc = 0
			for fp in fp_arr:
				fp = open(fn_arr[cfc], 'r+')
				msg = fp.read()
				mlen = len(msg)
				if mlen % 4096 == 0:
				        slen = mlen / 4096
				else:
				        slen = (mlen / 4096) + 1
				s.send(str(slen) + header)
				s.recv(3)
				if slen == 1:
				        s.send(msg + header)
				else:
				        for i in range(0,slen - 1):
				                s.send(msg[4096*i:4096*(i+1)])
				        s.send(msg[4096*(slen - 1):] + header)
				s.recv(3)
				fp.seek(0,0)
				cfc = cfc + 1
			time.sleep(BEDTIME)
			if s.recv(3) == 'die':
				for fp in fp_arr:
					fp.close()
				s.close()
				exit()
			s.send('ack')
			cfc = 0
			for fp in fp_arr:
				msg = ''
				slen = int(s.recv(7 + len(header)).split(header)[-2])
				s.send('ack')
				if slen == 1:
					msg = s.recv(4096 + len(header)).split(header)[-2]
				else:
					msg = ''
					for i in range(0,slen - 1):
						msg = msg + s.recv(4096)
					msg = msg + s.recv(4096 + len(header)).split(header)[-2]
				s.send('ack')
				fp.truncate()
				if cfc > len(fc_arr) - 1: fc_arr.append(msg)
				else: fc_arr[cfc] = msg
				fp.write(msg)
				fp.seek(0,0)
				cfc = cfc + 1
	except KeyboardInterrupt:
		for fp in fp_arr:
			fp.close()
		s.close()
		exit()
